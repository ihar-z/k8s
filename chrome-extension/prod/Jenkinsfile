import java.io.BufferedReader
import java.io.InputStreamReader
import java.net.URL
import groovy.json.JsonSlurper

pipeline {
    agent {
        dockerfile { dir 'chrome-extension' }
    }
    options {
        timeout(time: 10)
    }
    stages {
        stage('Install') {
            steps {
//                sh 'sleep 2m'
                script {
                    def choices = []

                    def response = httpRequest "http://nexus.crinfra.net:8081/nexus/service/rest/beta/search?name=vcd-amazon-alexa-skill"
                    echo 'response'
                    echo response
                    echo response.content
                    def results = new JsonSlurper().parseText(response.content)

                    results.items.each { data -> choices.push(data.version) }

                    def params = choices.sort().join("\n")

                    env.VERSION = input(
                        message: "Enter version",
                        ok: "Publish",
                        parameters: [ [$class: 'ChoiceParameterDefinition', choices: params, description: 'Properties', name: 'prop'] ]
                    )
                }
                sh 'echo $VERSION'
            }
        }
    }
}

//@NonCPS
//def getVersions(moduleName) {
//    def choices = []
//    def url = new URL("http://nexus.crinfra.net:8081/nexus/service/rest/beta/search?name=" + moduleName)
//    def conn = url.openConnection()
//    conn.setDoOutput(true)
//
//    def reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))
//    def results = new JsonSlurper().parseText(reader.getText());
//    reader.close()
//
//    results.items.each { data -> choices.push(data.version) }
//    return choices.sort().join("\n")
//}
@NonCPS
def getVersions(moduleName) {
    def choices = []
    echo 'test'
    def response = httpRequest "http://nexus.crinfra.net:8081/nexus/service/rest/beta/search?name=vcd-amazon-alexa-skill"
    echo 'response'
    echo response
    def results = new JsonSlurper().parseText(response.getContent())
    echo 'results'
    echo results

    results.items.each { data -> choices.push(data.version) }
    return choices.sort().join("\n")
}